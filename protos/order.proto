syntax = "proto3";

package ecommerce.trade;

option java_package = "com.example.ecommerce.trade";
option java_outer_classname = "TradeProto";

import "google/protobuf/timestamp.proto";

// 定义订单消息类型
message Order {
  string id = 1;
  string user_id = 2;
  repeated string sku_ids = 3;
  float total_amount = 4;
  string shipping_address = 5;
  string status = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// 创建订单请求消息类型
message CreateOrderRequest {
  string user_id = 1;
  repeated string sku_ids = 2;
  float total_amount = 3;
  string shipping_address = 4;
}

// 创建订单响应消息类型
message CreateOrderResponse {
  string order_id = 1;
}

// 获取订单请求消息类型
message GetOrderRequest {
  string order_id = 1;
}

// 获取订单响应消息类型
message GetOrderResponse {
  Order order = 1;
}

// 更新订单状态请求消息类型
message UpdateOrderStatusRequest {
  string order_id = 1;
  string status = 2;
}

// 更新订单状态响应消息类型
message UpdateOrderStatusResponse {
  bool success = 1;
}

// 取消订单请求消息类型
message CancelOrderRequest {
  string order_id = 1;
}

// 取消订单响应消息类型
message CancelOrderResponse {
  bool success = 1;
}

// 订单支付请求消息类型
message PayOrderRequest {
  string order_id = 1;
  float amount = 2;
  string payment_method = 3;
}

// 订单支付响应消息类型
message PayOrderResponse {
  bool success = 1;
}

// 订单拆分请求消息类型
message SplitOrderRequest {
  string order_id = 1;
  repeated string sku_ids = 2;
}

// 订单拆分响应消息类型
message SplitOrderResponse {
  repeated string new_order_ids = 1;
}

// 订单转移请求消息类型
message TransferOrderRequest {
  string order_id = 1;
  string target_user_id = 2;
}

// 订单转移响应消息类型
message TransferOrderResponse {
  bool success = 1;
}

// 订单履约控制请求消息类型
message FulfillmentControlRequest {
  string order_id = 1;
  string action = 2;
}

// 订单履约控制响应消息类型
message FulfillmentControlResponse {
  bool success = 1;
}

// 定义交易履约系统服务接口
service TradeService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {}
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {}
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse) {}
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {}
  rpc PayOrder(PayOrderRequest) returns (PayOrderResponse) {}
  rpc SplitOrder(SplitOrderRequest) returns (SplitOrderResponse) {}
  rpc TransferOrder(TransferOrderRequest) returns (TransferOrderResponse) {}
  rpc FulfillmentControl(FulfillmentControlRequest) returns (FulfillmentControlResponse) {}
}
