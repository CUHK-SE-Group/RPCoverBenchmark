syntax = "proto3";

package ecommerce.inventory;

option java_package = "com.example.ecommerce.inventory";
option java_outer_classname = "InventoryProto";
import "google/protobuf/timestamp.proto";

// 定义商品消息类型
message Product {
  string id = 1;
  string name = 2;
  float price = 3;
  string description = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

// 创建商品请求消息类型
message CreateProductRequest {
  string name = 1;
  float price = 2;
  string description = 3;
}

// 创建商品响应消息类型
message CreateProductResponse {
  string product_id = 1;
}

// 获取商品请求消息类型
message GetProductRequest {
  string product_id = 1;
}

// 获取商品响应消息类型
message GetProductResponse {
  Product product = 1;
}

// 更新商品请求消息类型
message UpdateProductRequest {
  string product_id = 1;
  string name = 2;
  float price = 3;
  string description = 4;
}

// 更新商品响应消息类型
message UpdateProductResponse {
  bool success = 1;
}

// 删除商品请求消息类型
message DeleteProductRequest {
  string product_id = 1;
}

// 删除商品响应消息类型
message DeleteProductResponse {
  bool success = 1;
}

// 库存项消息类型
message InventoryItem {
  string product_id = 1;
  int32 quantity = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

// 更新库存请求消息类型
message UpdateInventoryRequest {
  string product_id = 1;
  int32 quantity = 2;
}

// 更新库存响应消息类型
message UpdateInventoryResponse {
  bool success = 1;
}

// 查询库存请求消息类型
message QueryInventoryRequest {
  string product_id = 1;
}

// 查询库存响应消息类型
message QueryInventoryResponse {
  int32 quantity = 1;
}

// 定义库存中心服务接口
service InventoryService {
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse) {}
  rpc GetProduct(GetProductRequest) returns (GetProductResponse) {}
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse) {}
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse) {}
  rpc UpdateInventory(UpdateInventoryRequest) returns (UpdateInventoryResponse) {}
  rpc QueryInventory(QueryInventoryRequest) returns (QueryInventoryResponse) {}
}
