syntax = "proto3";

package ecommerce.merchant;

option java_package = "com.example.ecommerce.merchant";
option java_outer_classname = "MerchantProto";
import "google/protobuf/timestamp.proto";

// 定义商家消息类型
message Merchant {
  string id = 1;
  string name = 2;
  string address = 3;
  string email = 4;
  repeated string phone_numbers = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// 创建商家请求消息类型
message CreateMerchantRequest {
  string name = 1;
  string address = 2;
  string email = 3;
  repeated string phone_numbers = 4;
}

// 创建商家响应消息类型
message CreateMerchantResponse {
  string merchant_id = 1;
}

// 获取商家请求消息类型
message GetMerchantRequest {
  string merchant_id = 1;
}

// 获取商家响应消息类型
message GetMerchantResponse {
  Merchant merchant = 1;
}

// 更新商家请求消息类型
message UpdateMerchantRequest {
  string merchant_id = 1;
  string name = 2;
  string address = 3;
  string email = 4;
  repeated string phone_numbers = 5;
}

// 更新商家响应消息类型
message UpdateMerchantResponse {
  bool success = 1;
}

// 删除商家请求消息类型
message DeleteMerchantRequest {
  string merchant_id = 1;
}

// 删除商家响应消息类型
message DeleteMerchantResponse {
  bool success = 1;
}

// 商家账户消息类型
message MerchantAccount {
  string merchant_id = 1;
  string account_number = 2;
  float balance = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

// 创建商家账户请求消息类型
message CreateMerchantAccountRequest {
  string merchant_id = 1;
  string account_number = 2;
}

// 创建商家账户响应消息类型
message CreateMerchantAccountResponse {
  string account_number = 1;
}

// 获取商家账户请求消息类型
message GetMerchantAccountRequest {
  string merchant_id = 1;
}

// 获取商家账户响应消息类型
message GetMerchantAccountResponse {
  MerchantAccount merchant_account = 1;
}

// 更新商家账户请求消息类型
message UpdateMerchantAccountRequest {
  string merchant_id = 1;
  string account_number = 2;
  float balance = 3;
}

// 更新商家账户响应消息类型
message UpdateMerchantAccountResponse {
  bool success = 1;
}

// 删除商家账户请求消息类型
message DeleteMerchantAccountRequest {
  string merchant_id = 1;
}

// 删除商家账户响应消息类型
message DeleteMerchantAccountResponse {
  bool success = 1;
}

// 定义商家管理中心服务接口
service MerchantService {
  rpc CreateMerchant(CreateMerchantRequest) returns (CreateMerchantResponse) {}
  rpc GetMerchant(GetMerchantRequest) returns (GetMerchantResponse) {}
  rpc UpdateMerchant(UpdateMerchantRequest) returns (UpdateMerchantResponse) {}
  rpc DeleteMerchant(DeleteMerchantRequest) returns (DeleteMerchantResponse) {}
  rpc CreateMerchantAccount(CreateMerchantAccountRequest) returns (CreateMerchantAccountResponse) {}
  rpc GetMerchantAccount(GetMerchantAccountRequest) returns (GetMerchantAccountResponse) {}
  rpc UpdateMerchantAccount(UpdateMerchantAccountRequest) returns (UpdateMerchantAccountResponse) {}
  rpc DeleteMerchantAccount(DeleteMerchantAccountRequest) returns (DeleteMerchantAccountResponse) {}
}
